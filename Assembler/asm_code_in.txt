jmp f_SKIP
f_START:
pop cx
pop [0]
push 1
pop [1]
push 0
pop [2]
FIRST_LABEL_WHILE_1:
push [2]
push [0]
jb FIRST_LABEL_COMPARSION_1
push 0
jmp SECOND_LABEL_COMPARSION_1
FIRST_LABEL_COMPARSION_1:
push 1
SECOND_LABEL_COMPARSION_1:
push 0
je SECOND_LABEL_WHILE_1
push [2]
push 1
add
pop [2]
push [1]
push [2]
mul
pop [1]
push [0]
push [2]
je FIRST_LABEL_COMPARSION_2
push 0
jmp SECOND_LABEL_COMPARSION_2
FIRST_LABEL_COMPARSION_2:
push 1
SECOND_LABEL_COMPARSION_2:
push 0
je LABEL_IF_1
push [1]
push cx
ret
LABEL_IF_1:
jmp FIRST_LABEL_WHILE_1
SECOND_LABEL_WHILE_1:
f_SKIP:
push 5
pop [3]
push [3]
call f_START
pop [4]
push [4]
out
hlt